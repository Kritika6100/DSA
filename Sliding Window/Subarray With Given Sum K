class Solution
{
    //Function to find a continuous sub-array which adds up to a given number.
    static ArrayList<Integer> subarraySum(int[] arr, int n, int s) 
    {
        // Your code here
        ArrayList<Integer> list=new ArrayList<>();
        long sum=0;
         for(int i=0;i<n;i++)
         {
             sum+=arr[i];
         }
         if(sum<s)
         {
             list.add(-1);
             return list;
         }
         int left=0;
         int currsum=0;
         int count=0;
         for(int i=0;i<n;i++)
         {
             currsum+=arr[i];
             while(currsum>s && left<i)
             {
                 currsum-=arr[left];
                 left++;
             }
             if(currsum==s)
             {
                 list.add(left+1);
                 list.add(i+1);
                 return list;
                 
             }
         }
         list.add(-1);
         return list;
         
    }
}
//
1)This cannot be applied on negative elements
2)If the given Sum exceeds the sum then subtract the previous element from that and move the left pointer ++;
