Preorder--root Left right
Using the Stack data Structures
Stack --Lifo
Incounter with root put it inside the stack and pop the top and print it
so after putting the root put the right and then the left
because you have to go to the left first so it should be at the top and after traversing the top go the right and traverse it.
public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        //iterative preorder 
        Stack<TreeNode> s=new Stack<>();
        List<Integer> list=new ArrayList<>();
        if(root==null)
        {
            return list;
        }
        s.push(root);
        while(!s.isEmpty())
        {
            TreeNode topnode=s.peek();
            list.add(topnode.val);
            s.pop();
         
            if(topnode.right!=null){
            s.push(topnode.right);
            }
            //3 ka na toh left hai na toh right hai
            //null value toh kahi nhi chali jayegi
            if(topnode.left!=null){
            s.push(topnode.left);
            }
        }
           System.out.println(list);
        return list;
    }
}
